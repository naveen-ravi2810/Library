"""Initial Migration

Revision ID: ab072128113b
Revises: 
Create Date: 2023-12-27 22:04:02.939798

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ab072128113b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "books",
        sa.Column("book_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("book_name", sa.String(length=60), nullable=False),
        sa.Column("book_description", sa.String(length=600), nullable=False),
        sa.Column("book_genre", sa.String(length=60), nullable=False),
        sa.Column("book_author", sa.String(length=100), nullable=False),
        sa.Column("book_date", sa.Date(), nullable=False),
        sa.Column("updated_on", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("book_id"),
        sa.UniqueConstraint("book_name"),
    )
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_name", sa.String(length=100), nullable=True),
        sa.Column("user_nick_name", sa.String(length=100), nullable=True),
        sa.Column("user_role", sa.String(length=20), nullable=True),
        sa.Column("updated_on", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_index(op.f("ix_users_user_name"), "users", ["user_name"], unique=True)
    op.create_table(
        "notes",
        sa.Column("notes_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("note", sa.String(length=1000), nullable=False),
        sa.Column("book_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("updated_on", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(["book_id"], ["books.book_id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("notes_id"),
    )
    op.create_table(
        "ratings",
        sa.Column("rating_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("book_id", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=False),
        sa.Column("updated_on", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(["book_id"], ["books.book_id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("rating_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("ratings")
    op.drop_table("notes")
    op.drop_index(op.f("ix_users_user_name"), table_name="users")
    op.drop_table("users")
    op.drop_table("books")
    # ### end Alembic commands ###
